This multi-dimensional search which contains items with key value, price value, and a list of ints that act as the description of the item.
The ID and price of an item are stored in a TreeMap
The ID and list of ints are store in a HashMap
The list of ints are stored in a TreeSet
The following operations are implemented:
   a. Insert(id,price,list): insert a new item whose description is given
      in the list.  If an entry with the same id already exists, then its
      description and price are replaced by the new values, unless list
      is null or empty, in which case, just the price is updated. 
      Returns 1 if the item is new, and 0 otherwise.

   b. Find(id): return price of item with given id (or 0, if not found).

   c. Delete(id): delete item from storage.  Returns the sum of the
      ints that are in the description of the item deleted
      (or 0, if such an id did not exist).

   d. FindMinPrice(n): given an integer, find items whose description
      contains that number (exact match with one of the ints in the
      item's description), and return lowest price of those items.
      Return 0 if there is no such item.

   e. FindMaxPrice(n): given an integer, find items whose description
      contains that number, and return highest price of those items.
      Return 0 if there is no such item.

   f. FindPriceRange(n,low,high): given int n, find the number
      of items whose description contains n, and in addition,
      their prices fall within the given range, [low, high].

   g. RemoveNames(id, list): Remove elements of list from the description of id.
      It is possible that some of the items in the list are not in the
      id's description.  Return the sum of the numbers that are actually
      deleted from the description of id.  Return 0 if there is no such id.
